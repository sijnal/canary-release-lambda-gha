name: Canary Deploy for Lambda
run-name: ${{ github.actor }} start workflow
on:
  push:
    branches:
      - testing

jobs:
  deploy-canary-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Package Lambda Code
        working-directory: ./functions
        run: |
          zip -r ../lambda_package.zip .  

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Update Lambda Function Code
        run: |
          aws lambda update-function-code \
            --function-name MyLambdaFunctionCanary \
            --zip-file fileb://lambda_package.zip

      - name: Publish New Version
        run: |
          sleep 5 
          VERSION=$(aws lambda publish-version --function-name MyLambdaFunctionCanary --query 'Version' --output text)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Canary Deployment
        run: |
            STABLE_VERSION=$(aws lambda get-alias --function-name MyLambdaFunctionCanary --name prod --query 'FunctionVersion' --output text)
            echo "STABLE_VERSION=$STABLE_VERSION" >> $GITHUB_ENV
            
            aws lambda update-alias \
              --function-name MyLambdaFunctionCanary \
              --name prod \
              --function-version $STABLE_VERSION \
              --routing-config '{"AdditionalVersionWeights": {"${{ env.VERSION }}": 0.1}}'
      
      - name: Configure EventBridge Rule
        run: |
          aws events put-rule \
            --name CanaryDeploymentErrorRule \
            --event-pattern '{
              "source": ["aws.lambda"],
              "detail-type": ["Lambda Function Invocation Result"],
              "detail": {
                "function-name": ["MyLambdaFunctionCanary"],
                "requestContext": {
                  "functionVersion": ["${{ env.VERSION }}"]
                },
                "responsePayload": {
                  "statusCode": ["5xx", "4xx"]
                }
              }
            }' \
            --state ENABLED
                
          aws events put-targets \
            --rule CanaryDeploymentErrorRule \
            --targets '[{
                "Id": "LambdaRollbackTarget",
                "Arn": "arn:aws:lambda:us-east-1:851725517215:function:RollbackFunction",
                "Input": "{\"stable_version\": \"${{ env.STABLE_VERSION }}\", \"function_name\": \"MyLambdaFunctionCanary\"}"
            }]'
