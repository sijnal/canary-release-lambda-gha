name: Canary Deploy for Lambda
run-name: ${{ github.actor }} start workflow
on:
  push:
    branches:
      - testing

jobs:
  deploy-canary-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Package Lambda Code
        working-directory: ./functions
        run: |
          zip -r ../lambda_package.zip .  

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Update Lambda Function Code
        run: |
          aws lambda update-function-code \
            --function-name MyLambdaFunctionCanary \
            --zip-file fileb://lambda_package.zip

      - name: Publish New Version
        run: |
          sleep 5 
          VERSION=$(aws lambda publish-version --function-name MyLambdaFunctionCanary --query 'Version' --output text)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Canary Deployment
        run: |
            STABLE_VERSION=$(aws lambda get-alias --function-name MyLambdaFunctionCanary --name prod --query 'FunctionVersion' --output text)
            echo "STABLE_VERSION=$STABLE_VERSION" >> $GITHUB_ENV
            
            aws lambda update-alias \
              --function-name MyLambdaFunctionCanary \
              --name prod \
              --function-version $STABLE_VERSION \
              --routing-config '{"AdditionalVersionWeights": {"${{ env.VERSION }}": 0.1}}'
      
      - name: Verify Deployment with Retries
        run: |
          ERROR_COUNT=0
          RETRIES=5
          INTERVAL=5

          for i in $(seq 1 $RETRIES); do
            LOG_STREAM_NAME=$(aws logs describe-log-streams --log-group-name "/aws/lambda/MyLambdaFunctionCanary" --order-by "LastEventTime" --descending --query 'logStreams[0].logStreamName' --output text)

            if [ -n "$LOG_STREAM_NAME" ]; then
              ERROR_COUNT=$(aws logs get-log-events --log-group-name "/aws/lambda/MyLambdaFunctionCanary" --log-stream-name "$LOG_STREAM_NAME" --output text | grep "ERROR" | wc -l)
              if [ "$ERROR_COUNT" -gt 1 ]; then
                echo "Se encontraron errores. Iniciando rollback..."
                
                aws lambda update-alias \
                  --function-name MyLambdaFunctionCanary \
                  --name prod \
                  --function-version $STABLE_VERSION \
                  --routing-config '{"AdditionalVersionWeights": {}}'

                echo "Rollback realizado a la versión estable: $STABLE_VERSION."
                exit 1
              fi
            fi
            
            echo "No se encontraron errores. Intento $i/$RETRIES. Esperando $INTERVAL segundos..."
            sleep $INTERVAL
            INTERVAL=$((INTERVAL * 2)) # Incremento exponencial
          done

          echo "Se realizó la prueba de Canary Deployment con éxito."

          aws lambda update-alias \
            --function-name MyLambdaFunctionCanary \
            --name prod \
            --function-version ${{ env.VERSION }} \
            --routing-config '{"AdditionalVersionWeights": {}}'

          echo "Se actualizó la versión estable a la versión ${{ env.VERSION }}."

